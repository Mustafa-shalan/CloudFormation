AWSTemplateFormatVersion: 2010-09-09
Description: Creates a VPC with public and private subnets and create instance with internet access
Resources:
  VPC: 
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 192.168.101.0/24
  PublicSubnetA: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: "us-west-2a" 
      CidrBlock: 192.168.101.0/28
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
    
  PrivateSubnetB: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: "us-west-2b"
      CidrBlock: 192.168.101.32/28
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway


  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnetA

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh traffic
      GroupName: SSH-HTTP
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  MyInstance:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-0f1a5f5ada0e7da53"
      InstanceType: "t2.micro"
      SubnetId: !Ref PublicSubnetA
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      KeyName: "k_mustafa"
